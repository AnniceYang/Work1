export default {
  common:{
    websiteName: 'Energy storage integration system',
    name: 'Name',
    login: 'Login',
    forgotPrompt: 'If you forgot the password, please contact the administrator',
    personalInformation: 'Personal information',
    logout: 'Logout',
    more: 'More',
    addOrEdit: 'Add/Edit',
    closeTheRest: 'Close the rest',
    closeAll: 'Close all',
    namePrompt: 'Enter the user name',
    passwordPrompt: 'Enter Password',
    add: 'Add',
    search: 'Search',
    reset: 'Reset',
    inputPrompt: 'Please enter',
    selectPrompt: 'Please select',
    disable: 'Disable',
    enable: 'Enable',
    restore: 'Restore',
    edit: 'Edit',
    delete: 'Delete',
    process: 'Process',
    operate: 'Operate',
    resetPassword: 'ResetPassword',
    logoutPrompt: 'Do you want to exit the system? Continue quit or not?',
    prompt: 'Prompt',
    warn: 'Warn', 
    confirm: 'Confirm',
    cancel: 'Cancel',
    update: 'Update',
    view: 'View',
    createTime: 'Create time',
    loginAccount: 'Login account',
    loginPassword: 'Login password',
    phoneNumber: 'Phone number',
    userName: 'User name',
    modifyingUserName: 'Modifying user name',
    originalPassword: 'Original password',
    newPassword: 'New password',
    confirmPassword: 'Confirm password',
    changePassword: 'Change Password',
    operationSuccessful: 'Operation Successful',
    successfulModification: 'Successful Modification',
    addedSuccessfully: 'Successful Modification',
    resetSuccessful: 'Reset Successful',
    successfullyDeleted: 'Successfully Deleted',
    yes: 'Yes',
    no: 'No',
    userType: 'User type',
    user: 'User',
    distributor: 'Distributor',
    sureDelete: 'Are you sure to delete this data item ?',
    startingTime: 'Starting time',
    endTime: 'End time',
    save: 'Save',
    // validatePass: 'Please enter a password containing 6-12 letters and numbers',
    // validatePhone: 'Please enter the correct phone number'
  },
  userManage:{
    role: 'Role',
    status: 'Status',
    operate: 'Operate',
    normal: 'Normal',
    lock: 'Lock',
    userAddEdit: 'Add/Edit user',
    validateAccount: 'Account cannot be empty',
    validateName: 'User name cannot be empty',
    validatePassword: 'Password cannot be empty',
    validateRole: 'Role cannot be empty',
    sureDelete: 'Are you sure to delete this user ?'
  },
  menuManage:{
    menuName: 'Menu name',
    icon: 'Icon',
    name: 'Name',
    sort: 'Sort',
    componentPath: 'Component path',
    type: 'Type',
    buffer: 'Buffer',
    permissionIdentification: 'Permission identification',
    operate: 'Operate',
    close: 'Close',
    open: 'Open',
    left: 'Left menu',
    top: 'Top menu',
    button: 'Button',
    menuType: 'Menu type',
    previousMenu: 'Previous menu',
    validateName: 'Menu name cannot be empty',
    validatePath: 'Component path cannot be empty',
    validateSort: 'Menu sort cannot be empty',
    rootMenu: 'Root menu',
    sureDelete: 'Are you sure to delete this data item ?'
  },
  roleManage: {
    roleName: 'Role name',
    roleIdentification: 'Role identification',
    roleDescription: 'Role description',
    authority: 'Authority',
    assignPermissions: 'Assign permissions',
  },
  logManage: {
    userName: 'User name',
    userOperation: 'User operation',
    requestMethod: 'Request method',
    requestParameters: 'Request parameters',
    executionTime: 'Execution time(ms)',
    ipAddress: 'IP address',
    sureDelete: 'Are you sure to delete this log ?',
    attributeCode: 'Attribute code',
    attributeValueC: 'Attribute value(Chinese)',
    attributeValueE: 'Attribute value(English)',
    inputType: 'Input type',
    text: 'Text',
    multilineText: 'Multiline text',
    richText: 'Rich text',
    validateName: 'Name cannot be empty',
    validateCode: 'Attribute code cannot be empty',
    validateValue: 'Attribute value cannot be empty',
  },
  messageManage: {
    messageTitle: 'Message title',
    messageContent: 'Message content',
    description: 'Description',
    coverPhoto: 'Cover photo',
    messageTerminal: 'Message terminal',
    validateTitle: 'The message title cannot be empty',
    validateContent: 'The message content cannot be empty',
    validateSketch: 'The message description cannot be empty',
  },
  opinionManage: {
    processingStatus: 'Processing status',
    toBeProcessed: 'To be processed',
    processed: 'Processed',
    userAccount: 'User account',
    opinionContent: 'Opinion content',
    contactInformation: 'Contact information',
    picture: 'Picture'
  },
  versionManage: {
    type: 'Type',
    appType: 'App type',
    download: 'Download',
    version: 'Version',
    versionName: 'Version name',
    notes: 'Notes',
    file: 'File',
    // user: 'User',
    // distributor: 'Distributor',
    android: 'Android',
    ios: 'IOS',
    networkConnectingBoard: 'Network connecting board',
    inverterMCU: 'Inverter MCU',
    inverterDSP: 'Inverter DSP',
    battery: 'Battery',
    IIcb: 'Phase II communication board',
    IIdb: 'Phase II drive board',
    IIbattery: 'Phase II battery',
    upload1: 'Drag files here, or',
    upload2: 'click to upload',
    validateFile: 'Update file cannot be empty',
    validateCode: 'Version code cannot be empty',
    validateName: 'Version name cannot be empty',
    sureDelete: 'Are you sure you want to delete this piece of data ?'
  },
  classifyManage: {
    classificationName: 'Classification name',
    classificationNameC: 'Classification name(Chinese)',
    classificationNameE: 'Classification name(English)',
    description: 'Description',
    validateC: 'Classification name(Chinese) cannot be empty',
    validateE: 'Classification name(English) cannot be empty',
    validateSketch: 'Description cannot be empty',
  },
  problemManage: {
    problemClassify: 'Problem classify',
    title: 'Title',
    titleC: 'Title(Chinese)',
    titleE: 'Title(English)',
    contentC: 'Content(Chinese)',
    contentE: 'Content(English)',
    validatePC: 'Problem classify cannot be empty',
    validateT: 'Title cannot be empty',
    validateC: 'Content cannot be empty',
  },
  cancelRecord: {
    cancelEmail: 'Cancel email',
    processingStatus: 'Processing status',
    toBeProcessed: 'To be processed',
    pass: 'Pass',
    refuse: 'Refuse',
    cancellationType: 'Cancellation type',
    reason: 'Reason for cancellation',
    remarks: 'Remarks'
  },
  newsCenter: {
    newsTitle: 'News title',
    coverPhoto: 'Cover photo',
    content: 'Content',
    description: 'Description',
    validateP: 'Photo cannot be empty',
    validateT: 'Title cannot be empty',
    validateD: 'Description cannot be empty',
    validateC: 'Content cannot be empty',
  },
  installUser: {
    enterpriseName: 'Enterprise name',
    authorizationCode: 'Authorization code',
    contactPerson: 'Contact person',
    email: 'E-mail',
    validateA: 'Authorization code cannot be empty',
    validateC: 'Contact person cannot be empty',
    validateM: 'E-mail cannot be empty',
    validateE: 'Enterprise name code cannot be empty',
  },
  faultInfo: {
    faultCode: 'Fault code',
    faultLevel: 'Fault level',
    faultAlarm: 'Fault alarm',
    faultInformation: 'Fault information',
    possibleCauses: 'Possible causes',
    solutionMeasures: 'Solution measures',
    equipmentCode: 'Equipment code',
    alarmTime: 'Alarm time',
    processingStatus: 'Processing status',
    occur: 'Occur',
    disappear:'Disappear',
    oneLevel: 'One level',
    twoLevel: 'Two level',
    threeLevel: 'Three level',
    displayOrNot: 'Display or not',
    hide: 'Hide',
    display: 'Display',
    validateC: 'Fault code cannot be empty',
    validateI: 'Fault information cannot be empty',
    validateP: 'Possible causes cannot be empty',
    validateS: 'Solution measures cannot be empty',
  },
  deviceManage: {
    deviceName: 'Device name',
    snCode: 'SN code',
    serialNumber: 'Serial number',
    onlineStatus: 'Online status',
    offline: 'Offline',
    online: 'Online',
    updating: 'Updating',
    installer: 'Installer',
    deviceStatus: 'Device status',
    timeZone: 'Time zone',
    userName: 'User name',
    details: 'Details',
    batterySettings: 'Battery settings',
    OTAupgrade: 'OTA Upgrade',
    upgradeRecord: 'Upgrade record',
    operationInformation: 'Operation information',
    zeroZone: 'Zero Zone',
    eastFirstDistrict: 'East First District',
    eastSecondDistrict: 'East Second District',
    eastThirdDistrict: 'East Third District',
    eastFourthDistrict: 'East Fourth District',
    eastFifthDistrict: 'East Fifth District',
    eastSixthDistrict: 'East Sixth District',
    eastSeventhDistrict: 'East Seventh District',
    eastEighthDistrict: 'East Eighth District',
    eastNinthDistrict: 'East Ninth District',
    eastTenthDistrict: 'East Tenth District',
    eastEleventhDistrict: 'East Eleventh District',
    eastTwelfthDistrict: 'East Twelfth District',
    westFirstDistrict: 'West First District',
    westSecondDistrict: 'West Second District',
    westThirdDistrict: 'West Third District',
    westFourthDistrict: 'West Fourth District',
    westFifthDistrict: 'West Fifth District',
    westSixthDistrict: 'West Sixth District',
    westSeventhDistrict: 'West Seventh District',
    westEighthDistrict: 'West Eighth District',
    westNinthDistrict: 'West Ninth District',
    westTenthDistrict: 'West Tenth District',
    westEleventhDistrict: 'West Eleventh District',
    westTwelfthDistrict: 'West Twelfth District',
    validateS: 'SN code cannot be empty',
    validateD: 'Device name cannot be empty',
    upgradeType: 'Upgrade type',
    upgradePackage: 'Upgrade package',
    networkConnectingBoard: 'Network connecting board',
    inverterMCU: 'Inverter MCU',
    inverterDSP: 'Inverter DSP',
    battery: 'Battery',
    IIcb: 'Phase II communication board',
    IIdb: 'Phase II drive board',
    IIbattery: 'Phase II battery',
    validateP: 'Upgrade package cannot be empty',
    success: 'OTA upgrade command successfully issued',
    chargingSwitch: 'Charging switch',
    socOfChargeUp: 'SOC of charge up',
    timePeriodOfCharging: 'Time period of charging',
    electricitySellingSwitch: 'Electricity selling switch',
    socOfSellElectricity: 'SOC of sell electricity',
    timePeriodOfElectricitySales: 'Time period of electricity sales',
    dischargeSwitch: 'Discharge switch',
    socOfDischargingOff: 'SOC of discharging off',
    timePeriodOfDischarging: 'Time period of discharging',
    deviceBatterySettings: 'Device battery settings',
    restoreDefaultSettings: 'Restore default settings',
    validateCharge: 'Please enter the charging time period until SOC',
    validateDischarge: 'Please enter the selling time period for charging up to SOC',
    validateData: 'Please fill in the data completely',
    validateTimePeriod: 'The time period range cannot overlap',
    versionNumber: 'Version number',
    updateTime: 'Update time',
    upgradeStatus: 'Upgrade status',
    upgradeRecord: 'Upgrade Record',
    modelName: 'Model name',
    communicationStickSoftwareVersion: 'Communication stick software version',
    buyingElectricity: 'Buying electricity',
    sellingElectricity: 'Selling electricity',
    photovoltaicPowerGeneration: 'PV power generation',
    capacity: 'Capacity',
    totalConsumption: 'Total consumption',
    cumulativeGain: 'cumulative gain',
    pvPower: 'PV power',
    equipmentRemarks: 'Equipment remarks',
    equipmentDataStatistics: 'Equipment data statistics',
    deviceInformation: 'Device information',
    userInformation: 'User information',
    userName: 'User name',
    deviceName: 'Device name',
    bindingTime: 'Binding time',
    installerInformation: 'Installer information',
    installerName: 'Installer name',
    installationTime: 'Installation time',
    type: 'Type',
    day: 'Day',
    month: 'Month',
    year: 'Year',
    timeFrame: 'Time frame',
    to: 'To',
    electricityInformation: 'Electricity information',
    powerGenerationRevenue: 'Power generation revenue',
    totalRevenue: 'Total revenue',
    spontaneousRevenue: 'Spontaneous revenue',
    electricitySalesRevenue: 'Electricity sales revenue',
    realTimePower: 'Real time power',
    realTime: 'Real time',
    table: 'Table',
    curve: 'Curve',
    time: 'Time',
    dataContent: 'Data content',
    value: 'Value',
    unit: 'Unit',
    battery: 'Battery',
    photovoltaic: 'Photovoltaic',
    load: 'Load',
    sellingElectricity: 'Selling electricity',
    buyingElectricity: 'Buying electricity',
    basicInformation: 'Basic information',
    pvInformation: 'PV information',
    batteryInfo: 'Battery info',
    batteryStatus: 'Battery status',
    BMSlogo: 'BMS logo',

    dcdcTemperature: 'DCDC temperature',
    busbarVoltage: 'Busbar voltage',
    pv1Voltage: 'PV1 voltage',
    pv1Current: 'PV1 current',
    pv1Power: 'PV1 power',
    pv2Voltage: 'PV2 voltage',
    pv2Current: 'PV2 current',
    pv2Power: 'PV2 power',
    batteryVoltage: 'Battery voltage',
    batteryCurrent: 'Battery current',
    batteryPower: 'Battery power',
    batteryTotalSoc: 'Battery totalSOC',
    phaseAGridFrequency: 'PhaseA grid frequency',
    phaseAGridVoltage: 'PhaseA grid voltage',
    gridActivePower: 'Grid active power',
    ctCurrent: 'CT current',
    ctPower: 'CT power',
    inverterSideTemperature: 'Inverter side temperature',
    phaseAInverterOutputFrequency: 'PhaseA inverter output frequency',
    phaseAInverterOutputVoltage: 'PhaseA inverter output voltage',
    phaseAInverterOutputCurrent: 'PhaseA inverter output current',
    phaseAInverterActivePower: 'PhaseA inverter active power',
    phaseALoadVoltage: 'PhaseA load voltage',
    phaseALoadCurrent: 'PhaseA load current',
    phaseALoadActivePower: 'PhaseA load active power',
    loadRealTimePower: 'Load realTime power',
    middleBusbarVoltage: 'Middle busbar voltage',
    buckBoostCurrent: 'BuckBoost current',
    electricRelayMiddleVoltage: 'Electric relay middleVoltage',

    displayType: 'display type',
    MCUSoftwareVersion: 'MCU software version',
    DSPSoftwareVersion: 'DSP software version',
    MCUHardwareVersion: 'MCU hardware version',
    DSPHardwareVersion: 'DSP hardware version',
    currentModeOfTheSystem: 'Current mode of the system',
    systemOperationStatus: 'System operation status',
    countryCode: 'Country code',
    dailyPowerGeneration: 'Daily power generation',
    totalPowerGeneration: 'Total power generation',
    ratedPower: 'Rated power',
    batteryEnergy: 'Battery energy',

    powerGridInformation: 'Power grid information',
    powerGridStatus: 'Power grid status',
    phaseBGridFrequency: 'PhaseB grid frequency',
    phaseCGridFrequency: 'PhaseC grid frequency',
    phaseBGridVoltage: 'PhaseB grid voltage',
    phaseCGridVoltage: 'PhaseC grid voltage',
    apparentPowerOfThePowerGrid: 'Apparent power of the power grid',
    reactivePowerOfThePowerGrid: 'Reactive power of the power grid',
    CTDirection: 'CT direction',
    inverterInformation: 'Inverter information',
    inversionState: 'Inversion state',
    phaseBInverterOutputFrequency: 'PhaseB inverter output frequency',
    phaseCInverterOutputFrequency: 'PhaseC inverter output frequency',
    phaseBInverterOutputVoltage: 'PhaseB inverter output voltage',
    phaseCInverterOutputVoltage: 'PhaseC inverter output voltage',
    phaseBInverterOutputCurrent: 'PhaseB inverter output current',
    phaseCInverterOutputCurrent: 'PhaseC inverter output current',
    phaseAInverterApparentPower: 'PhaseA inverter apparent power',
    phaseBInverterApparentPower: 'PhaseB inverter apparent power',
    phaseCInverterApparentPower: 'PhaseC inverter apparent power',
    phaseBInverterActivePower: 'PhaseB inverter active power',
    phaseCInverterActivePower: 'PhaseC inverter active power',
    phaseAInverterReactivePower: 'PhaseA inverter reactive power',
    phaseBInverterReactivePower: 'PhaseB inverter reactive power',
    phaseCInverterReactivePower: 'PhaseC inverter reactive power',

    loadInformation: 'Load information',
    phaseBLoadVoltage: 'PhaseB load voltage',
    phaseCLoadVoltage: 'PhaseC load voltage',
    phaseBLoadCurrent: 'PhaseB load current',
    phaseCLoadCurrent: 'PhaseC load current',
    apparentPowerOfPhaseALoad: 'Apparent power of phaseA load',
    apparentPowerOfPhaseBLoad: 'Apparent power of phaseB load',
    apparentPowerOfPhaseCLoad:'Apparent power of phaseC load',
    phaseBLoadActivePower: 'PhaseB load active power',
    phaseCLoadActivePower: 'PhaseC load active power',
    phaseALoadPowerPercentage: 'PhaseA load power percentage',
    phaseBLoadPowerPercentage: 'PhaseB load power percentage',
    phaseCLoadPowerPercentage: 'PhaseC load power percentage',
    powerConsumption: 'Power consumption',
    electricityMeterInformation: 'Electricity meter information',
    normalIndicatorOfElectricityMeter: 'Normal indicator of electricity meter',
    meterVoltage: 'Meter voltage',
    currentCombinedActiveEnergy: 'Current combined active energy',
    currentPositiveActiveEnergy: 'Current positive active energy',
    currentReverseActiveEnergy: 'Current reverse active energy',
    meterCurrent: 'Meter current',
    meterPower: 'Meter power',
    meterPowerFactor: 'Meter power factor',
    meterFrequency: 'Meter frequency',

    otherInformation: 'Other information',
    selfInspectionStatus: 'Self inspection status',
    protectionThreshold: 'Self check actual protection threshold',
    protectionTime: 'Self check actual protection time',
    realTimeProtectionThreshold: 'Self check real-time protection threshold',
    USBStatus: 'USB status',
    lineNumber1: 'Energy flow diagram line number 1-8 segment symbol',
    lineNumber2: 'Energy flow diagram line number 9-16 segment symbol',
    switchNumber: 'Energy flow diagram switch number 1-16 symbol',
    runTimeD: 'Running time (days)',
    runTimeH: 'Running time (hours)',
    runTimeM: 'Running time (minutes)',
    runTimeS: 'Running time (seconds)',
    dailyElectricityConsumption: 'Daily electricity consumption',
    accumulatedElectricityConsumption: 'Accumulated electricity consumption',
    dailyGridConnectionVolume: 'Daily grid connection volume',
    accumulatedGridConnectionQuantity: 'Accumulated grid connection quantity',
    dailyElectricityPurchase: 'Daily electricity purchase',
    accumulatedPurchasingPower: 'Accumulated purchasing power',
    dailyChargingCapacity: 'Daily charging capacity',
    accumulatedChargingCapacity: 'Accumulated charging capacity',
    dailyDischargeCapacity: 'Daily discharge capacity',
    accumulatedDischargeCapacity: 'Accumulated discharge capacity',
    leakageCurrent: 'Leakage current',
    intermediateBusbarVoltage: 'Intermediate busbar voltage',
    buckBoostCurrent: 'BuckBoost current',
    PVIsoVoltage: 'PVIso voltage',
    zeroGroundVoltage: 'Zero ground voltage',
    DCInverterCurrent: 'DC component of inverter current',
    DCLoadVoltage: 'DC component of load voltage',
    relayIntermediateVoltage: 'Relay intermediate voltage',
    numberOfRecords: 'Number of history records',
    enableState: 'Battery charging/discharging heating enable state',
    factoryCode: 'Battery factory code',
    productNumber: 'Battery product number',
    factoryDate: 'Battery factory date',
    chargingCurrent: 'Maximum allowable charging current',
    manufacturerInformation: 'Manufacturer Information',
    inverterSerialNumber: 'Inverter serial number',
    dischargeCurrent: 'Maximum allowable discharge current',
    chargingByBattery: 'The maximum charging current allowed by the inverter for the battery',
    dischargeByBattery: 'The maximum discharge current allowed by the inverter for the battery',

    commonSettings: 'Common Settings',
    setSystemTime: 'Set system time (year, month)',
    communicationType: 'Communication protocol type',
    dailyCalibration: 'Daily power generation calibration',
    totalCalibration: 'Total power generation calibration',
    clearConsumptionData: 'Clear electricity consumption data',
    clearGenerationData: 'Clear power generation data',
    bootCommand: 'Boot command',
    shutdownCommand: 'Shutdown command',
    cancelShutdownCommand: 'Cancel shutdown command',
    communicationSettings: 'Communication settings',
    BMSModel: 'BMS model',
    BMSAddress: 'BMS address',
    BMSBaudRate: 'BMS Baud Rate',
    numberOfLithiumBattery: 'Number of lithium battery blocks',
    collectorAddress: 'Collector communication address',
    collectorType: 'Collector communication protocol type',
    collectorBaudRate: 'Collector communication baud rate',
    deviceAddress: 'Device communication address',

    advancedSetting: 'advanced setting',
    parallelOffMode: 'Parallel off grid mode',
    gridConnectionMode: 'Grid connection mode',
    antiBackflowMode: 'Anti backflow mode',
    systemModeSettings: 'System Mode Settings',
    PVConnectionSettings: 'PV Connection Settings',
    independence: 'independence',
    paralleling: 'paralleling',
    ratedOutputVoltageSetting: 'Rated output voltage setting',
    ratedOutputFrequencySetting: 'Rated output frequency setting',
    batteryTypeSettings: 'Battery type settings',
    leadAcid: 'Lead acid',
    lithiumBattery: 'Lithium battery',
    batteryChargingCurrent: 'Battery charging current',
    batteryDischargeCurrent: 'Battery discharge current',
    batteryAverageChargingVoltage: 'Battery average charging voltage',
    batteryFloatChargingVoltage: 'Battery float charging voltage',
    batteryEOD: 'Battery EOD',
    batteryDOD: 'Battery DOD',
    lowerLimitOfGridConnectedSOC: 'Lower limit of grid connected SOC',
    offGridSOCLowerLimit: 'Off grid SOC lower limit',
    electricityMeterCT: 'Electricity meter CT',
    electricityMeter: 'electricity meter',
  },
  modelManage: {
    modeName: 'Mode name',
    modeEncoding: 'Mode encoding',
    modeDescription: 'Mode description',
    state: 'State',
    normal: 'Normal',
    toBeOpened: 'To be opened',
    sort: 'Sort',
    chargingSwitch: 'Charging switch',
    socOfChargeUp: 'SOC of charge up',
    timePeriodOfCharging: 'Time period of charging',
    electricitySellingSwitch: 'Electricity selling switch',
    socOfSellElectricity: 'SOC of sell electricity',
    timePeriodOfElectricitySales: 'Time period of electricity sales',
    dischargeSwitch: 'Discharge switch',
    socOfDischargingOff: 'SOC of discharging off',
    timePeriodOfDischarging: 'Time period of discharging',
    prompt: 'The time period must be within the entire day range (00:00-23:59)',
    validateE: 'Mode encoding cannot be empty',
    validateN: 'Mode name cannot be empty',
    validateC: 'SOC of charge up cannot be empty',
    validateEl: 'SOC of sell electricity cannot be empty',
    validateD: 'SOC of discharging off cannot be empty',
    validateDe: 'Mode description cannot be empty',
  },
  dataCenter: {
    title: 'Title',
    type: 'Type',
    sketch: 'Sketch',
    coverPhoto: 'Cover photo',
    newsCenter: 'News center',
    installationInstructions: 'Installation instructions',
    installationVideo: 'Installation video',
    userManual: 'User manual',
    troubleShooting: 'Trouble shooting',
    content: 'Content',
    validateTitle: 'Title cannot be empty',
    validateType: 'Type cannot be empty',
    validateContent: 'Content cannot be empty',
  },
  addressManage: {
    countryName: 'Country name',
    validateC: 'Country name cannot be empty',
  },
  upgradeInfo: {
    versionNumber: 'Version number',
    upgradeType: 'Upgrade type',
    upgradeableVersion: 'Upgradeable version',
    state: 'State',
    updateTime: 'Update time',
    upgradePackage: 'Upgrade package',
    addVersionNumber: 'Add version number',
    toBeIssued: 'To be issued',
    distributed: 'Distributed',
    networkConnectingBoard: 'Network connecting board',
    inverterMCU: 'Inverter MCU',
    inverterDSP: 'Inverter DSP',
    battery: 'Battery',
    IIcb: 'Phase II communication board',
    IIdb: 'Phase II drive board',
    IIbattery: 'Phase II battery',
    validateType: 'Upgrade type cannot be empty',
    validatePackage: 'Upgrade package cannot be empty',
    validateNumber: 'Please add the upgrade version number',
  },
  parameterConfiguration: {

  },
  alarmControl: {
    alarmEncoding: 'Alarm encoding',
    alarmName: 'Alarm name',
    description: 'Description',
    createTime: 'Create Time',
    displayOrNot: 'Display or not',
    sort: 'sort',
    validateC: 'Alarm encoding cannot be empty',
    validateN: 'Alarm name cannot be empty',
    validateD: 'Description cannot be empty',
  },
  ordinaryUser: {
    userName: 'User name',
    contacts: 'Contacts',
    telephone: 'Telephone',
    address: 'Address',
    timeZone: 'Time zone',
    electricityPriceSetting: 'Electricity price setting',
    defaultElSettings: 'Default electricity price settings',
    title: 'Electricity price information',
    yuan: 'yuan',
    time1: 'Time period for purchasing electricity',
    time2: 'Electricity sales time period',
    viewDevice: 'View device',
  }
}
